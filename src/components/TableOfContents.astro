---
interface Heading {
  depth: number;
  slug: string;
  text: string;
}

interface Props {
  headings: Heading[];
}

const { headings } = Astro.props;
---

<nav
  class="table-of-contents w-full max-w-3xl p-6 sm:p-4 rounded-xl sm:rounded-lg"
>
  <h2 class="text-2xl sm:text-xl font-semibold mb-6 sm:mb-4 text-center">
    Table of Contents
  </h2>
  <ul class="space-y-3 sm:space-y-2">
    {
      headings.map((heading) => (
        <li class={`toc-item toc-item-${heading.depth} text-lg sm:text-base`}>
          <a
            href={`#${heading.slug}`}
            class="text-blue-600 hover:text-blue-800 dark:text-blue-400 dark:hover:text-blue-200"
          >
            {heading.text}
          </a>
        </li>
      ))
    }
  </ul>
</nav>

<style>
  .table-of-contents {
    background-color: #fffbe6;
    backdrop-filter: blur(10px);
    border-radius: 0.75rem;
    padding: 1rem 1.25rem;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    margin-top: 0.5rem;
    text-align: center;
    transition: all 0.3s ease;
  }

  @media (max-width: 1023px) {
    .table-of-contents {
      border-radius: 0.5rem;
      padding: 1rem;
    }
  }

  :global(.dark) .table-of-contents {
    background-color: rgba(0, 0, 0, 0.2);
  }

  .toc-item {
    list-style-type: none;
  }
  .toc-wrapper {
    background-color: #e6f3ff; /* Light blue background */
    border: 1px solid #cccccc;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    border-radius: 0.5rem;
    padding: 1rem;
    transition: all 0.3s ease; /* Smooth transition for all changes */
  }

  /* Hover effect for the TOC */
  .toc-wrapper:hover {
    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.2);
    transform: translateY(-5px); /* Slight upward movement on hover */
  }

  .table-of-contents:hover {
    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.2);
    transform: translateY(-5px);
  }
</style>
