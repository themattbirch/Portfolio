---
import type { CollectionEntry } from "astro:content";
import { Image } from "astro:assets";

interface Props {
  post: CollectionEntry<"posts">;
}

interface DateObject {
  raw: Date;
  formatted: string;
}

const { post } = Astro.props;
const formattedDate =
  typeof post.data.date === "object" && "formatted" in post.data.date
    ? (post.data.date as DateObject).formatted
    : post.data.date;
---

<article
  class="bg-white dark:bg-gray-800 rounded-lg shadow-md overflow-hidden transition-transform hover:scale-105 duration-300"
>
  <a href={`/blog/${post.slug}`} class="block">
    <Image
      src={post.data.image}
      alt={post.data.title}
      width={400}
      height={225}
      class="w-full h-40 sm:h-48 object-cover"
    />
    <div class="p-4 sm:p-6">
      <h2
        class="text-lg sm:text-xl font-semibold mb-2 text-gray-800 dark:text-white"
      >
        {post.data.title}
      </h2>
      <p
        class="text-sm sm:text-base text-gray-600 dark:text-gray-300 mb-4 line-clamp-3"
      >
        {post.data.description || post.body.slice(0, 150) + "..."}
      </p>
      <time
        datetime={formattedDate}
        class="text-xs sm:text-sm text-gray-500 dark:text-gray-400"
      >
        {formattedDate}
      </time>
    </div>
  </a>
</article>
