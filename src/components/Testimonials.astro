---
interface Testimonial {
  name: string;
  business: string;
  quote: string;
  photoUrl: string;
}

interface Props {
  testimonials?: Testimonial[];
}

const testimonials: Testimonial[] = [
  {
    name: "Jane Doe",
    business: "Doe Innovations",
    quote:
      "Truly exceptional service and project outcomes that exceeded our expectations.",
    photoUrl: "/images/headshot-tan-tee-2.jpg",
  },
  {
    name: "John Smith",
    business: "Smith Consulting",
    quote:
      "A professional approach and great results. Highly recommended web developer.",
    photoUrl: "/images/headshot-tan-tee-2.jpg",
  },
];
---

<div
  class="swiper-container relative testimonial-container rounded-full transition-all duration-300"
>
  <div class="swiper-wrapper">
    {
      testimonials && testimonials.length > 0 ? (
        testimonials.map((testimonial) => (
          <div class="swiper-slide">
            <div class="testimonial-card rounded-full p-6 shadow-lg text-white relative overflow-hidden max-w-xs md:max-w-sm lg:max-w-md mx-auto">
              <div class="testimonial-photo-wrapper">
                <img
                  src={testimonial.photoUrl}
                  alt={`Headshot of ${testimonial.name}`}
                  class="testimonial-photo w-24 h-24 rounded-full object-cover mx-auto shadow-lg mb-4"
                  loading="lazy"
                />
              </div>
              <div class="text-center">
                <p class="text-2xl font-semibold">{testimonial.name}</p>
                <p class="text-sm text-gray-600 dark:text-gray-400">
                  {testimonial.business}
                </p>
                <p class="text-gray-300 italic mt-4">
                  "{testimonial.quote}"
                </p>
              </div>
            </div>
          </div>
        ))
      ) : (
        <p>No testimonials available.</p>
      )
    }
  </div>

  <div class="swiper-button-prev"></div>
  <div class="swiper-button-next"></div>
  <div class="swiper-pagination"></div>
</div>

<script>
  import Swiper from "swiper";
  import { Navigation, Pagination, Autoplay } from "swiper/modules";
  import "swiper/css";
  import "swiper/css/navigation";
  import "swiper/css/pagination";

  function initSwiper() {
    new Swiper(".swiper-container", {
      modules: [Navigation, Pagination, Autoplay],
      loop: true,
      slidesPerView: 1,
      spaceBetween: 30,
      autoplay: {
        delay: 5000,
        disableOnInteraction: false,
      },
      pagination: {
        el: ".swiper-pagination",
        clickable: true,
      },
      navigation: {
        nextEl: ".swiper-button-next",
        prevEl: ".swiper-button-prev",
      },
    });
  }

  // Initialize Swiper on page load
  document.addEventListener("DOMContentLoaded", initSwiper);

  // Re-initialize Swiper when the page content is updated (for Astro view transitions)
  document.addEventListener("astro:page-load", initSwiper);
</script>

<style>
  .swiper-container {
    width: 100%;
    height: auto;
    padding: 2rem;
    overflow: hidden;
  }

  /* Rest of the styles remain the same */

  .swiper-button-prev,
  .swiper-button-next {
    color: var(--swiper-navigation-color, var(--testimonial-text));
  }

  .swiper-button-prev {
    left: 2rem;
  }

  .swiper-button-next {
    right: 2rem;
  }
</style>
