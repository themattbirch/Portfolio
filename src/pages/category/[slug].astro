---
import { getCollection } from "astro:content";
import type { BlogPost } from "@/types/blog";
import Layout from "../../layouts/Layout.astro";
import PostPreview from "../../components/PostPreview.astro";
import Breadcrumb from "../../components/BreadCrumb.astro";

export const prerender = true;

export async function getStaticPaths() {
  try {
    const allPosts = (await getCollection("posts")) as BlogPost[];
    if (!allPosts || !allPosts.length) {
      return [];
    }

    // First: Sort all posts
    const sortedAllPosts = allPosts.sort((a, b) => {
      const dateA = new Date(a.data.date.raw);
      const dateB = new Date(b.data.date.raw);
      return dateB.getTime() - dateA.getTime();
    });

    const uniqueCategories = [
      ...new Set(sortedAllPosts.flatMap((post) => post.data.categories)),
    ];

    return uniqueCategories.map((category) => {
      const filteredPosts = sortedAllPosts.filter((post) =>
        post.data.categories.includes(category)
      );
      return {
        params: { slug: category.toLowerCase().replace(/\s+/g, "-") },
        props: { category, posts: filteredPosts },
      };
    });
  } catch (error) {
    console.error("Error in getStaticPaths:", error);
    return [];
  }
}

interface Props {
  category: string;
  posts: BlogPost[];
}

const { category, posts = [] } = Astro.props;
---

<Layout
  title={`${category} blog posts`}
  description={`Explore articles about ${category} from Matt Birch's blog. In-depth guides, practical tips, and professional insights for developers and digital marketers.`}
  ogImage="/assets/images/blog-category-page.jpg"
  fullWidth={true}
>
  <div class="horizontal-gradient-wrapper">
    <section
      class="max-w-screen-xl mx-auto py-8 sm:py-12 md:py-16 lg:py-24 px-4 sm:px-6 lg:px-8"
    >
      <Breadcrumb current={category} parent="Blog" />

      <h1
        class="text-3xl sm:text-4xl md:text-5xl font-bold mb-6 sm:my-8 md:my-12 text-center"
      >
        All "{category}" Blog Posts
      </h1>

      <div
        class="grid gap-6 sm:gap-8 md:gap-12 mt-4 sm:mt-6 md:mt-8 sm:grid-cols-2 lg:grid-cols-3"
      >
        {posts.map((post) => <PostPreview post={post} />)}
      </div>
      <div class="flex justify-center items-center mt-8 sm:mt-12">
        <a
          href="/blog"
          class="category-button text-blue-700 dark:text-white
        rounded-full px-4 sm:px-6 py-2 sm:py-3 text-base sm:text-lg
        font-semibold border-2 border-blue-700 dark:border-white
        hover:bg-sky-100 dark:hover:bg-teal-900 transition-colors duration-300"
        >
          View All Posts
        </a>
      </div>
    </section>
  </div>
</Layout>

<style>
  .gradient-wrapper {
    @apply bg-gradient-to-b from-white via-[#dde4ee] to-white;
  }

  :global(.dark) .gradient-wrapper {
    @apply bg-gradient-to-b from-[#45617c] via-gray-800 to-[#45617c];
  }

  .category-button {
    @apply text-blue-700 dark:text-white
           rounded-full px-4 sm:px-6 py-2 sm:py-3 
           text-base sm:text-lg font-semibold
           border-2 border-blue-700 dark:border-white
           hover:bg-sky-100 dark:hover:bg-teal-900
           transition-colors duration-300
           focus:outline-none focus:ring-2 focus:ring-blue-500
           active:transform active:scale-95;
  }
</style>
