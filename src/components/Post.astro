---
import type { CollectionEntry } from "astro:content";
import { Image } from "astro:assets";

interface Props {
  post: CollectionEntry<"posts">;
  index: number;
}

const { post, index } = Astro.props;
const postUrl = `/blog/${post.slug}`;

// Move this to a shared utils file since it's used in both components
const formatCategoryUrl = (category: string): string => {
  return category
    .toLowerCase()
    .replace(/\s+/g, "-")
    .replace(/[^a-z0-9-]/g, "")
    .replace(/-+/g, "-");
};

// Add a safety check for description length
const getDescription = (post: Props["post"]): string => {
  if (post.data.description) return post.data.description;
  return post.body.length > 150 ? `${post.body.slice(0, 150)}...` : post.body;
};

const description = getDescription(post);
const firstCategory = post.data.categories[0];
---

<article
  class="bg-white dark:bg-gray-800 rounded-lg shadow-md overflow-hidden
         transition-transform hover:scale-105 duration-300 flex flex-col h-full"
>
  <a href={postUrl} class="block">
    <Image
      src={post.data.image}
      alt={post.data.title}
      width={400}
      height={225}
      class="w-full sm:h-60 md:h-80 lg:h-60 object-cover"
      loading={index <= 2 ? "eager" : "lazy"}
    />
  </a>
  <div class="p-4 sm:p-5 flex-1 flex flex-col">
    <h2
      class="text-base sm:text-lg font-semibold mb-3 text-gray-800 dark:text-white"
    >
      <a href={postUrl} class="hover:text-blue-600 dark:hover:text-blue-400">
        {post.data.title}
      </a>
    </h2>
    <p
      class="text-sm sm:text-base text-gray-600 dark:text-gray-300 mb-4
             line-clamp-3 flex-grow px-0.5"
    >
      {description}
    </p>

    <div class="mt-auto pt-2">
      <div
        class="flex items-center justify-between text-xs sm:text-sm px-0.5 space-x-2"
      >
        <a
          href={postUrl}
          class="text-blue-600 dark:text-blue-400 hover:underline whitespace-nowrap"
        >
          Read More
        </a>

        <time
          datetime={post.data.date.raw.toISOString()}
          class="text-gray-500 dark:text-gray-400 whitespace-nowrap"
        >
          {post.data.date.formatted}
        </time>

        {
          firstCategory && (
            <a
              href={`/category/${formatCategoryUrl(firstCategory)}`}
              class="bg-blue-100 text-blue-800 font-medium px-2.5 py-1 
                 rounded dark:bg-blue-200 dark:text-blue-800 whitespace-nowrap"
            >
              {firstCategory}
            </a>
          )
        }
      </div>
    </div>
  </div>
</article>
