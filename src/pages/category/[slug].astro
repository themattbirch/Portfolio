---
import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";
import Layout from "../../layouts/Layout.astro";
import PostPreview from "../../components/PostPreview.astro";
import Breadcrumb from "../../components/BreadCrumb.astro";

export async function getStaticPaths() {
  const allPosts = await getCollection("posts");
  const uniqueCategories = [
    ...new Set(allPosts.flatMap((post) => post.data.categories)),
  ];

  return uniqueCategories.map((category) => {
    const filteredPosts = allPosts.filter((post) =>
      post.data.categories.includes(category)
    );
    return {
      params: { slug: category.toLowerCase().replace(/\s+/g, "-") },
      props: { category, posts: filteredPosts },
    };
  });
}

interface Props {
  category: string;
  posts: CollectionEntry<"posts">[];
}

const { category, posts } = Astro.props;
const sortedPosts = posts.sort(
  (a, b) => new Date(b.data.date).valueOf() - new Date(a.data.date).valueOf()
);
---

<Layout
  title={`${category} blog posts`}
  description={`All posts in the ${category} category`}
  fullWidth={true}
>
  <div class="horizontal-gradient-wrapper">
    <section
      class="max-w-screen-xl mx-auto py-16 sm:py-24 md:py-32 px-4 sm:px-6 lg:px-8"
    >
      <Breadcrumb current={category} parent="Blog" />

      <h1
        class="text-4xl md:text-5xl font-bold mb-8 sm:mb-12 md:mb-16 text-center"
      >
        All "{category}" Blog Posts
      </h1>

      <div
        class="grid gap-12 mt-8 sm:mt-12 md:mt-16 md:grid-cols-2 lg:grid-cols-3"
      >
        {sortedPosts.map((post) => <PostPreview post={post} />)}
      </div>
      <div class="flex justify-center items-center mt-12">
        <a
          href="/blog"
          class="category-button text-blue-700 dark:text-white rounded-full px-6 py-3 text-lg font-semibold border-2 border-blue-700 dark:border-white hover:bg-sky-100 dark:hover:bg-teal-900 transition-colors duration-300"
        >
          View All Posts
        </a>
      </div>
    </section>
  </div>
</Layout>

<style>
  .horizontal-gradient-wrapper {
    background: linear-gradient(to bottom, #ffffff, #dde4ee, #ffffff);
  }

  :global(.dark) .horizontal-gradient-wrapper {
    background: linear-gradient(to bottom, #45617c, #1f2937, #45617c);
  }

  .back-link {
    display: inline-block;
    margin-bottom: 1rem;
    font-weight: 600;
  }
</style>
