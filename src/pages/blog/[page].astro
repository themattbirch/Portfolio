---
import type { GetStaticPathsOptions, Page } from "astro";
import { type CollectionEntry, getCollection } from "astro:content";
import Layout from "../../layouts/Layout.astro";
import Post from "../../components/Post.astro";
import Pagination from "../../components/Pagination.astro";
import CategoryList from "../../components/CategoryList.astro";

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
  const allPosts = await getCollection("posts");
  return paginate(allPosts, { pageSize: 6 });
}

type Props = {
  page: Page;
};

const { page } = Astro.props;
const posts = page.data as CollectionEntry<"posts">[];
const allCategories = posts.flatMap((post) => post.data.categories);
const categories = Array.from(new Set(allCategories));
const pageTitle = "Matt Birch's Web Development Blog";
const blogDescription =
  "Transforming ideas into powerful web experiences. I combine technical expertise with creative problem-solving to deliver websites that not only look great but perform exceptionally.";
---

<Layout title={pageTitle} description={blogDescription} fullWidth={true}>
  <div class="horizontal-gradient-wrapper">
    <section
      class="max-w-screen-2xl mx-auto py-16 sm:py-24 md:py-32 px-4 sm:px-6 md:px-8"
    >
      <div class="max-w-screen-2xl mx-auto">
        <header class="text-center mb-12">
          <h1 class="h1-text heading-text mb-8 md:mb-12">
            {pageTitle}
          </h1>
          <p class="dark:text-darkModeText text-xl mb-12">
            {blogDescription}
          </p>
        </header>
        <CategoryList categories={categories} title="Tags" />
        <div class="my-12 flex justify-end">
          <Pagination prevURL={page.url.prev} nextURL={page.url.next} />
        </div>
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
          {posts.map((post) => <Post post={post} />)}
        </div>
        <div class="mt-12 flex justify-end">
          <Pagination prevURL={page.url.prev} nextURL={page.url.next} />
        </div>
      </div>
    </section>
  </div>
</Layout>

<style>
  .horizontal-gradient-wrapper {
    background: linear-gradient(to bottom, #ffffff, #dde4ee, #ffffff);
  }

  /* Dark mode gradient */
  :global(.dark) .horizontal-gradient-wrapper {
    background: linear-gradient(to bottom, #45617c, #1f2937, #45617c);
  }

  article:hover img {
    transform: scale(1.05);
    transition: transform 0.3s ease;
  }

  article:hover h2 {
    color: #2563eb; /* Tailwind's blue-600 */
    transition: color 0.3s ease;
  }

  .toc-wrapper a {
    transition:
      color 0.3s ease,
      transform 0.3s ease;
    display: inline-block;
  }

  .toc-wrapper a:hover {
    color: #3b82f6; /* Tailwind's blue-500 */
    transform: translateX(5px);
  }

  .dark .toc-wrapper a:hover {
    color: #60a5fa; /* Tailwind's blue-400 */
  }
</style>
