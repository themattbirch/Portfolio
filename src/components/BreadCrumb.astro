---
export interface Props {
  current?: string; // Make current optional
  parent?: string;
  className?: string;
  hideCurrentPage?: boolean; // Add new prop
}

const { current, parent, hideCurrentPage = false } = Astro.props;
---

<nav aria-label="breadcrumb">
  <ol class="breadcrumb flex flex-wrap items-center">
    <li class="breadcrumb-item whitespace-nowrap">
      <a href="/">Home</a>
    </li>
    {
      parent && (
        <li class="breadcrumb-item whitespace-nowrap">
          <a href="/blog">{parent}</a>
        </li>
      )
    }
    {
      !hideCurrentPage && current && (
        <li class="breadcrumb-item break-words" aria-current="page">
          {current}
        </li>
      )
    }
  </ol>
</nav>

<style>
  .breadcrumb {
    @apply text-base md:text-lg text-gray-600;
  }

  .breadcrumb-item {
    @apply flex items-center;
  }

  .breadcrumb-item:not(:last-child)::after {
    content: "/";
    @apply mx-1 sm:mx-2 whitespace-nowrap;
  }

  .breadcrumb-item a {
    @apply text-blue-600 hover:text-blue-800 transition-colors duration-200;
  }

  .breadcrumb-item.active {
    @apply text-gray-800;
  }

  /* Dark mode styles */
  :global(.dark) .breadcrumb {
    @apply text-zinc-300;
  }

  :global(.dark) .breadcrumb-item a {
    @apply text-sky-100 hover:text-blue-200;
  }

  :global(.dark) .breadcrumb-item.active {
    @apply text-gray-200;
  }
</style>
