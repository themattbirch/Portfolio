---
import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";
import Layout from "../../layouts/Layout.astro";
import TableOfContents from "../../components/TableOfContents.astro";
import Share from "../../components/Share.astro";
import Breadcrumb from "../../components/BreadCrumb.astro";
import { Image } from "astro:assets";

export const getStaticPaths = async () => {
  const posts = await getCollection("posts");
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: { post },
  }));
};

// Define the structure of a heading
interface Heading {
  depth: number;
  slug: string;
  text: string;
}

type Props = {
  post: CollectionEntry<"posts">;
};

const { post } = Astro.props;
const { Content, headings } = await post.render();
---

<Layout
  title={post.data.title}
  description={post.data.description}
  ogImage={post.data.image.src}
  image={post.data.image}
  fullWidth={true}
>
  <div class="horizontal-gradient-wrapper">
    <section
      class="max-w-screen-2xl mx-auto py-8 sm:py-12 md:py-16 lg:py-24 px-4 sm:px-6 lg:px-8"
    >
      <div
        class="breadcrumb-container flex items-center justify-between space-x-4"
      >
        <Breadcrumb current={post.data.title} parent="Blog" />
      </div>

      <h1
        class="text-3xl sm:text-4xl md:text-5xl lg:text-6xl font-bold py-4 sm:py-6 md:py-8 text-center"
      >
        {post.data.title}
      </h1>

      <div class="mb-8 sm:mb-12 md:mb-16">
        <Image
          src={post.data.image}
          alt={post.data.title}
          width={1920}
          height={1080}
          class="w-full h-auto object-cover rounded-lg shadow-lg"
          loading="eager"
        />
      </div>

      <!-- Mobile Table of Contents -->
      <div class="lg:hidden mb-8">
        <div class="toc-wrapper w-full max-w-md mx-auto">
          <TableOfContents headings={headings as Heading[]} />
        </div>
      </div>

      <div class="flex flex-col blog-lg:flex-row lg:gap-16 relative">
        <div class="lg:w-3/4">
          <div
            class="prose prose-sm sm:prose-base lg:prose-xl dark:prose-invert max-w-none"
          >
            <Content />
          </div>
        </div>

        <!-- Desktop Table of Contents -->
        <aside
          class="hidden lg:block lg:w-1/4 mt-8 lg:mt-0 lg:absolute lg:right-0 lg:top-0"
        >
          <div class="lg:sticky lg:top-8 toc-wrapper">
            <TableOfContents headings={headings as Heading[]} />
          </div>
        </aside>
      </div>
    </section>
    <div class="mt-8 sm:mt-12 md:mt-16 text-base sm:text-lg">
      <Share post={post} />
    </div>
  </div>
</Layout>

<style>
  .horizontal-gradient-wrapper {
    background: linear-gradient(to bottom, #ffffff, #dde4ee, #ffffff);
  }

  :global(.dark) .horizontal-gradient-wrapper {
    background: linear-gradient(to bottom, #45617c, #1f2937, #45617c);
  }

  .back-link {
    display: inline-block;
    margin-bottom: 1rem;
    font-weight: 600;
  }

  @media (min-width: 1024px) {
    .sticky {
      position: sticky;
      top: 2rem;
    }
  }
  /* New styles for full-width image */
  .mb-16.-mx-4.sm\:-mx-6.lg\:-mx-8 {
    margin-left: calc(-1 * var(--page-padding, 1rem));
    margin-right: calc(-1 * var(--page-padding, 1rem));
    width: calc(100% + (2 * var(--page-padding, 1rem)));
  }

  @media (min-width: 640px) {
    .mb-16.-mx-4.sm\:-mx-6.lg\:-mx-8 {
      --page-padding: 1.5rem;
    }
  }

  @media (min-width: 1024px) {
    .mb-16.-mx-4.sm\:-mx-6.lg\:-mx-8 {
      --page-padding: 2rem;
    }
  }

  .toc-wrapper {
    max-width: 250px;
    margin-left: auto;
    margin-right: auto;
  }

  @media (max-width: 1023px) {
    .toc-wrapper {
      max-width: 90%; /* Adjust this value as needed */
      font-size: 0.9rem;
    }
    .toc-wrapper :global(h2) {
      font-size: 1.5rem;
    }
    .toc-wrapper :global(ul) {
      padding-left: 1rem;
    }
    .toc-wrapper :global(a) {
      font-size: 1rem;
    }
  }

  .toc-wrapper :global(a) {
    display: inline-block;
    color: #1d4ed8; /* Tailwind's blue-700 */
    text-decoration: none;
    transition:
      color 0.3s ease,
      transform 0.3s ease;
    font-size: 1.25rem; /* Increased from 1.125rem to 1.25rem */
  }

  .toc-wrapper :global(a:hover) {
    color: #3b82f6; /* Tailwind's blue-500 */
    transform: translateX(5px);
  }

  :global(.dark) .toc-wrapper :global(a) {
    color: #93c5fd; /* Tailwind's blue-300 for better contrast in dark mode */
  }

  :global(.dark) .toc-wrapper :global(a:hover) {
    color: #60a5fa; /* Tailwind's blue-400 */
  }

  .breadcrumb-container {
    display: flex;
    align-items: center;
    justify-content: space-between; /* Or justify-start if alignment is needed */
    white-space: nowrap; /* Prevents text from wrapping */
  }

  @media (max-width: 828px) {
    .breadcrumb-container {
      font-size: 0.875rem; /* Optional: Adjust font size for smaller screens */
    }
  }
</style>
