---
import SkillsComponent from "@/components/SkillsComponent.astro";
import Layout from "@/layouts/Layout.astro";

const skills = [
  {
    name: "HTML",
    description:
      "Proficient in creating structured, semantic markup for web pages.",
    icon: "fa-handshake",
    level: "Beginner",
  },
  {
    name: "CSS",
    description:
      "Skilled in creating interactive web experiences and manipulating the DOM.",
    icon: "fa-handshake",
    level: "Skill",
  },
  {
    name: "JavaScript",
    description: "Text coming.",
    icon: "fa-handshake",
    level: "Advanced",
  },
  {
    name: "React",
    description: "Update coming.",
    icon: "fa-handshake",
    level: "Dumb",
  },
];

// Split the skills array into two parts
const half = Math.ceil(skills.length / 2);
const skillsPart1 = skills.slice(0, half);
const skillsPart2 = skills.slice(half);

const pageTitle = "Technical Skills I've Acquired";
const pageDescription = "The technical skills I possess.";
---

<Layout title={pageTitle} description={pageDescription}>
  <div class="horizontal-gradient-wrapper-1">
    <!-- Introduction Text Section -->
    <section class="text-center mx-auto py-16 sm:py-24 md:py-32">
      <div class="max-w-screen mx-auto">
        <h1 class="h1-text heading-text text-center mb-8 md:mb-12 fade-in">
          {pageTitle}
        </h1>
        <p class="text-lg">
          Understanding and refining these soft skills is crucial for
          professional growth, fostering strong team dynamics, and ensuring
          project success.
        </p>
      </div>
    </section>
  </div>

  <div class="horizontal-gradient-wrapper-2">
    <!-- SkillsComponent with Split Part 1 -->
    <section class="pb-16 sm:pb-24 md:pb-32 fade-in">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <h2 class="h2-text heading-text font-bold text-center mb-8 sm:mb-16">
          Knowledgeable in
        </h2>
        <SkillsComponent skills={skillsPart1} />
      </div>
    </section>

    <!-- SkillsComponent with Split Part 2 -->
    <section>
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <h2 class="h2-text heading-text font-bold text-center mb-8 sm:mb-16">
          <h2 class="h2-text heading-text font-bold text-center mb-8 sm:mb-16">
            More skills I possess
          </h2>
          <SkillsComponent skills={skillsPart2} />
        </h2>
      </div>
    </section>
  </div>

  <div class="horizontal-gradient-wrapper-3">
    <section
      class="text-center mx-auto py-16 sm:py-24 md:py-32 dark:text-white"
    >
      <div class="max-w-5xl mx-auto">
        <h2 class="h2-text heading-text text-center mb-8 md:mb-12">
          Also familiar with...
        </h2>
        <p class="text-lg">
          WordPress, libraries (NextJS, Node), And don't forget about my writing
          skills. I'm an excellent copywriter. It's possible you've read some of
          my work on LinkedIn, Twitter or a popular blog. Clients hire me to
          ghostwrite for them.
        </p>
      </div>
    </section>
  </div>
</Layout>

<style>
  .horizontal-gradient-wrapper-1 {
    background: linear-gradient(to bottom, #dde4ee, #ffffff);
  }

  .horizontal-gradient-wrapper-2 {
    background: linear-gradient(to bottom, #ffffff, #dde4ee, #ffffff);
  }

  .horizontal-gradient-wrapper-3 {
    background: linear-gradient(to bottom, #ffffff, #dde4ee);
  }

  /* Dark mode gradient */
  :global(.dark) .horizontal-gradient-wrapper-1 {
    background: linear-gradient(to bottom, #1f2937, #374d62);
  }

  :global(.dark) .horizontal-gradient-wrapper-2 {
    background: linear-gradient(to bottom, #374d62, #1f2937, #374d62);
  }

  :global(.dark) .horizontal-gradient-wrapper-3 {
    background: linear-gradient(to bottom, #374d62, #1f2937);
  }
</style>

<script>
  function handleFadeIn() {
    const fadeIns = document.querySelectorAll(".fade-in");

    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            entry.target.classList.add("visible");
            observer.unobserve(entry.target); // Stop observing once visible
          }
        });
      },
      {
        threshold: 0.2,
        rootMargin: "0px 0px -100px 0px", // Start fading in slightly before the element is in view
      }
    );

    fadeIns.forEach((fadeIn) => {
      // Check if the element is already visible (e.g., on page load)
      const rect = fadeIn.getBoundingClientRect();
      if (rect.top < window.innerHeight) {
        fadeIn.classList.add("visible");
      } else {
        observer.observe(fadeIn);
      }
    });
  }

  // Run on initial load
  document.addEventListener("DOMContentLoaded", handleFadeIn);

  // Run on each page navigation (for SPA-like behavior)
  document.addEventListener("astro:page-load", handleFadeIn);

  // Fallback for browsers that don't support IntersectionObserver
  if (!("IntersectionObserver" in window)) {
    document
      .querySelectorAll(".fade-in")
      .forEach((el) => el.classList.add("visible"));
  }
</script>
