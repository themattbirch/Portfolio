---
// src/pages/blog/[slug].astro
import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";
import type { BlogPost, PostFrontmatter } from "@/types/blog";
import Layout from "../../layouts/Layout.astro";
import TableOfContents from "../../components/TableOfContents.astro";
import Share from "../../components/Share.astro";
import NextPost from "@/components/Next-Post.astro";
import Breadcrumb from "../../components/BreadCrumb.astro";
import { sortPostsByDate } from "@/utils/sorters";

interface Heading {
  depth: number;
  slug: string;
  text: string;
}

export const getStaticPaths = async () => {
  try {
    const posts = await getCollection("posts");
    const sortedPosts = sortPostsByDate(posts as BlogPost[]);

    return sortedPosts.map((post) => ({
      params: { slug: post.slug },
      props: { post },
    }));
  } catch (error) {
    console.error("Error generating static paths:", error);
    return [];
  }
};

export const prerender = true;

const { post } = Astro.props;
const { Content, headings } = await post.render();
const canonicalURL = new URL(`/blog/${post.slug}`, Astro.site).toString();

const allPosts = await getCollection("posts");
const sorted = sortPostsByDate(allPosts as BlogPost[]); // newest-first
const i = sorted.findIndex((p) => p.slug === post.slug);

// Next = older post in a newest-first list
const next: CollectionEntry<"posts"> | null =
  i >= 0 && i < sorted.length - 1 ? sorted[i + 1] : null;

const formatDate = (date: Date) => {
  return new Date(date).toLocaleDateString("en-US", {
    year: "numeric",
    month: "long",
    day: "numeric",
  });
};
const imageUrl = post.data.image;
---

<Layout
  title={post.data.title}
  description={post.data.description}
  ogImage={imageUrl}
  fullWidth={true}
>
  <div class="horizontal-gradient-wrapper">
    <section
      class="max-w-screen-2xl mx-auto py-8 sm:py-12 md:py-16 lg:py-24 px-4 sm:px-6 lg:px-8"
    >
      <article
        class="relative"
        itemscope
        itemtype="https://schema.org/BlogPosting"
      >
        <meta itemprop="url" content={canonicalURL} />
        <link itemprop="mainEntityOfPage" href={canonicalURL} />

        <Breadcrumb
          current={post.data.title}
          parent="Blog"
          hideCurrentPage={true}
        />

        <header class="mb-8 sm:mb-12 md:mb-16 text-center">
          <h1
            class="text-3xl sm:text-4xl md:text-5xl lg:text-6xl font-bold py-4 sm:py-6 md:py-8"
            itemprop="headline"
          >
            {post.data.title}
          </h1>

          <div
            class="flex justify-center items-center gap-4 text-gray-600 dark:text-gray-400"
          >
            <span class="text-sm sm:text-base" itemprop="datePublished">
              {formatDate(post.data.date.raw)}
            </span>
            <span class="text-sm sm:text-base">â€¢</span>
            <span class="text-sm sm:text-base" itemprop="author">
              Written By: {post.data.author}
            </span>
          </div>
        </header>

        <div class="mb-8 sm:mb-12 md:mb-16">
          <img
            src={imageUrl}
            alt={post.data.alt || post.data.title}
            width="1920"
            height="1080"
            class="w-full h-auto object-cover rounded-lg shadow-lg"
            loading="eager"
            itemprop="image"
          />
        </div>

        <div class="custom-lg:hidden mb-8 flex justify-center">
          <div class="toc-wrapper w-full mx-auto text-center">
            <TableOfContents headings={headings as Heading[]} />
          </div>
        </div>

        <div class="flex flex-col custom-lg:flex-row custom-lg:gap-16 relative">
          <div class="custom-lg:w-3/4">
            <div
              class="prose prose-sm sm:prose-base custom-lg:prose-xl dark:prose-invert max-w-none"
              itemprop="articleBody"
            >
              <Content />
            </div>
          </div>

          <aside
            class="hidden custom-lg:block custom-lg:w-1/4 mt-8 custom-lg:mt-0 custom-lg:absolute custom-lg:right-0 custom-lg:top-0"
          >
            <div
              class="toc-wrapper lg:pl-8"
              style="position: sticky; top: 2rem;"
            >
              <TableOfContents headings={headings as Heading[]} />
            </div>
          </aside>
        </div>
      </article>

      <div class="mt-8 sm:mt-12 md:mt-16 text-base sm:text-lg">
        <Share post={post} />
        <NextPost next={next} />
      </div>
    </section>
  </div>
</Layout>

<style>
  .horizontal-gradient-wrapper {
    @apply bg-gradient-to-b from-white via-blue-50 to-white dark:from-[#45617c] dark:via-gray-800 dark:to-[#45617c];
  }

  .toc-wrapper {
    @apply max-w-[90%] mx-auto w-full;
  }

  .toc-wrapper :global(a) {
    @apply inline-block text-blue-700 no-underline transition-all duration-300 ease-in-out text-xl;
  }

  .toc-wrapper :global(a:hover) {
    @apply text-blue-500 translate-x-1;
  }

  :global(.dark) .toc-wrapper :global(a) {
    @apply text-blue-300 hover:text-blue-400;
  }

  /* Responsive  */
  @media (max-width: 1179px) {
    .toc-wrapper {
      @apply text-sm max-w-[90%] mx-auto;
    }

    .toc-wrapper :global(h2) {
      @apply text-2xl;
    }

    .toc-wrapper :global(ul) {
      @apply pl-4;
    }

    .toc-wrapper :global(a) {
      @apply text-base;
    }
  }

  @media (min-width: 1180px) {
    .toc-wrapper {
      @apply w-full max-w-none ml-auto mr-0;
    }

    .lg\:w-3\/4 {
      width: calc(75% - 2rem);
    }
  }
</style>
