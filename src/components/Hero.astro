---
import ThemeToggle from "./ThemeToggle.jsx";

const lightBackground = "/images/2.png";
const darkBackground = "/images/2-dark-gray.png";
const headshot = "/images/my headshot avatar.png";
---

<div class="relative h-screen flex items-center overflow-hidden">
  <div
    id="hero-background"
    class="absolute inset-0 z-0 bg-cover bg-center transition-all duration-300"
  >
  </div>

  <div class="relative z-10 w-full">
    <div class="max-w-[1536px] mx-auto px-4 sm:px-6 lg:px-8">
      <div class="flex justify-between items-start">
        <div class="max-w-2xl">
          <h2
            class="text-5xl font-extrabold tracking-tight text-gray-900 dark:text-white sm:text-6xl md:text-7xl mb-4 opacity-0 transform translate-y-4 transition-all duration-1000"
            id="heroTitle"
          >
            <span class="block text-blue-600 dark:text-blue-400"
              >Matt Birch</span
            >
          </h2>
          <p
            class="mt-3 text-xl text-gray-700 dark:text-gray-300 sm:mt-5 sm:text-2xl max-w-xl opacity-0 transform translate-y-4 transition-all duration-1000 delay-500"
            id="heroTagline"
          >
            Getting the job <span
              class="text-blue-600 dark:text-blue-400 font-bold animate-pulse"
              >done</span
            > today!
          </p>
          <div
            class="mt-8 opacity-0 transform translate-y-4 transition-all duration-1000 delay-1000"
            id="heroCta"
          >
            <a
              href="#contact"
              class="inline-block bg-blue-600 hover:bg-blue-700
            text-white font-bold py-3 px-6 rounded-full transition-colors
            duration-300 transform hover:scale-105"
            >
              Get in Touch
            </a>
          </div>
        </div>
      </div>
    </div>

    <div class="absolute bottom-0 right-0 mb-8 mr-8 z-10">
      <img
        src={headshot}
        alt="Matt Birch headshot"
        class="w-24 h-24 sm:w-32 sm:h-32 rounded-full border-4 border-white dark:border-gray-800 shadow-lg"
        width="128"
        height="128"
      />
    </div>

    <script define:vars={{ lightBackground, darkBackground }}>
      function updateTheme() {
        const isDarkMode = document.documentElement.classList.contains("dark");
        const heroBackground = document.getElementById("hero-background");

        if (heroBackground) {
          const backgroundImage = isDarkMode ? darkBackground : lightBackground;
          if (
            heroBackground.style.backgroundImage !== `url(${backgroundImage})`
          ) {
            heroBackground.style.backgroundImage = `url(${backgroundImage})`;
          }
        }
      }

      function debounce(func, wait) {
        let timeout;
        return function (...args) {
          clearTimeout(timeout);
          timeout = setTimeout(() => func.apply(this, args), wait);
        };
      }

      const debouncedUpdateTheme = debounce(updateTheme, 100);

      const observer = new MutationObserver((mutations) => {
        mutations.forEach((mutation) => {
          if (
            mutation.type === "attributes" &&
            mutation.attributeName === "class"
          ) {
            debouncedUpdateTheme();
          }
        });
      });

      updateTheme();

      observer.observe(document.documentElement, {
        attributes: true,
        attributeFilter: ["class"],
      });

      document.addEventListener("astro:after-swap", updateTheme);

      function animateHeroElements() {
        const elements = ["heroTitle", "heroTagline", "heroCta"];
        elements.forEach((id, index) => {
          setTimeout(() => {
            const element = document.getElementById(id);
            if (element) {
              element.classList.remove("opacity-0", "translate-y-4");
            }
          }, index * 500);
        });
      }

      // Run animation on initial page load
      document.addEventListener("DOMContentLoaded", animateHeroElements);

      // Run animation on subsequent navigation
      document.addEventListener("astro:page-load", animateHeroElements);
    </script>

    <style>
      @media (max-width: 640px) {
        .relative.h-screen {
          height: calc(100vh - 4rem);
        }
      }
    </style>
  </div>
</div>
